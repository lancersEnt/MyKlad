version: '3.7'

services:

  # users-svc:
  #   image: "users-svc:dev"
  #   container_name: "users-svc"
  #   build:
  #     context: "./microservices/users"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 9009:9009
  #   depends_on:
  #     - posts-db
  #     - broker
  #   restart: "on-failure"

  # posts-svc:
  #   image: "posts-svc:dev"
  #   container_name: "posts-svc"
  #   build:
  #     context: "./microservices/posts"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 9119:9119
  #   depends_on:
  #     - "posts-db"
  #   restart: "on-failure"

  # comments-svc:
  #   image: "comments-svc:dev"
  #   container_name: "comments-svc"
  #   build:
  #     context: "./microservices/comments"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 9229:9229
  #   depends_on:
  #     - "posts-db"
  #   restart: "on-failure"

  # klads-svc:
  #   image: "klads-svc:dev"
  #   container_name: "klads-svc"
  #   build:
  #     context: "./microservices/klads"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 9339:9339
  #   depends_on:
  #     - "posts-db"
  #   restart: "on-failure"

  # mailer-svc:
  #   image: "mailer-svc:dev"
  #   container_name: "mailer-svc"
  #   build:
  #     context: "./microservices/mailer"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 9449:9449
  #   depends_on:
  #     - broker
  #     - users-svc
  #   restart: "on-failure"

  # notification-svc:
  #   image: "notification-svc:dev"
  #   container_name: "notification-svc"
  #   build:
  #     context: "./microservices/notification"
  #   networks:
  #     - myklad
  #   ports:
  #     - 9559:9559
  #   depends_on:
  #     - "posts-db"
  #   restart: "on-failure"

  # gateway-svc:
  #   image: "gateway-svc:dev"
  #   container_name: "gateway-svc"
  #   build:
  #     context: "./api-gateway"
  #   # networks:
  #   #   - myklad
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - users-svc
  #     - posts-svc
  #     - comments-svc
  #     - klads-svc
  #     # - notification-svc
  #   restart: "on-failure"

  posts-db:
    image: prismagraphql/mongo-single-replica:5.0.3
    container_name: "myklad-posts-db"
    # networks:
    #   - myklad
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: saaf95
      MONGO_INITDB_ROOT_PASSWORD: saaf95
    restart: "on-failure"
    volumes:
      - mongodata:/var/lib/mongodb/data
  
  socialdb:
    image: neo4j:4.4.12-community
    container_name: mk_neo4j_container
    restart: unless-stopped
    ports:
      - '7474:7474' # browser access
      - '7687:7687' # browser access
    environment:
      - NEO4J_AUTH=none
      - NEO4J_dbms_default__database=myklad
    # networks:
    #   - myklad
    volumes:
      - gdb:/data

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass TESTtest1234
    volumes: 
      - cache:/data

  broker:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      - controller
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '2@controller:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  controller:
    image: confluentinc/cp-kafka:7.4.0
    hostname: controller
    container_name: controller
    ports:
      - "9093:9093"
      - "9102:9102"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '2@controller:9093'
      KAFKA_LISTENERS: 'CONTROLLER://controller:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-controller-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
      - controller
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
    hostname: connect
    container_name: connect
    depends_on:
      - broker
      - controller
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.4.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - controller
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.4.0
    depends_on:
      - broker
      - controller
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'


networks:
  myklad:
volumes:
  mongodata:
  gdb:
    driver: local
  cache:
    driver: local